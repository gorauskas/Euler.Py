# -*- coding: utf-8 -*-

from euler.baseeuler import BaseEuler


class Euler(BaseEuler):
    def __init__(self):
        self._T = lambda n: n*(n+1)/2
        self._P = lambda n: n*(3*n-1)/2
        self._H = lambda n: n*(2*n-1)
        self._t = tuple(map(self._T, range(1, 100000)))
        self._p = set(map(self._P, range(1, 100000)))
        self._h = set(map(self._H, range(1, 100000)))

    def solve(self):
        for i in self._t:
            if i in self._p and i in self._h:
                if i > 40755.0:
                    return i

    @property
    def answer(self):
        return ('The next triangle number that is also pentagonal and ' +
                'hexagonal is %d.' % self.solve())

    @property
    def problem(self):
        return '''
Project Euler Problem 45

    Triangle, pentagonal, and hexagonal numbers are generated by the following
    formulae:

    Triangle	 	Tn=n(n+1)/2	 	1, 3, 6, 10, 15, ...
    Pentagonal	 	Pn=n(3n−1)/2	 	1, 5, 12, 22, 35, ...
    Hexagonal	 	Hn=n(2n−1)	 	1, 6, 15, 28, 45, ...

    It can be verified that T285 = P165 = H143 = 40755.

    Find the next triangle number that is also pentagonal and hexagonal.
'''
